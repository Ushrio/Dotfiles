# Set the mod key to the windows key
set $mod Mod4

# set the default window edge pixel width
default_border pixel 2
# set the default window edge for floating windows
default_floating_border pixel 2

# do not hide any edge borders
hide_edge_borders none

# Change the look of the borders of windows
bindsym $mod+u border none
bindsym $mod+y border pixel 2
bindsym $mod+n border normal

# Set font
font xft:firacode 11

# Set the modifier for moving and resizing windows in floating mode
floating_modifier $mod

# Launch kitty
bindsym $mod+Return exec alacritty

# Window kill command
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+d exec --no-startup-id rofi -show drun
bindsym $mod+Shift+d exec --no-startup-id rofi -show run

# start up firefox
bindsym $mod+F2 exec firefox

# start up Ranger in Alacritty with PyWal Colors
bindsym $mod+F1 exec alacritty -e "./Ubuntu-Config/scripts/openRangerWithWalColors.sh"

# start up vim
bindsym $mod+F3 exec alacritty -e "vim"

# Open up the notification center
bindsym $mod+F8 exec "./Ubuntu-Config/scripts/notification-center/rofi_notif_center.sh"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
# move focused window back and forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# change the next windows orientation
bindsym $mod+Ctrl+h split h;exec notify-send  'i3' 'Tile Horizontally'
bindsym $mod+Ctrl+v split v;exec notify-send 'i3' 'Tile Vertically'
bindsym $mod+Ctrl+q split toggle; exec notify-send  'i3' 'Tile Toggle'

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking;exec notify-send 'i3' 'Stacking Layout'
bindsym $mod+w layout tabbed;exec notify-send 'i3' 'Tabbed Layout'
bindsym $mod+e layout toggle split;exec notify-send 'i3' 'Split Layout (Default)'

# toggle tiling / floating
bindsym $mod+space floating toggle;exec notify-send 'i3' 'Floating Layout'

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle;exec notify-send 'i3' 'Floating/Split Toggle'

# toggle sticky
#bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# workspaces
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9

# set odd windows to main monitor and even windows to alternate monitor
workspace $ws1 output DisplayPort-2
workspace $ws3 output DisplayPort-2
workspace $ws5 output DisplayPort-2
workspace $ws7 output DisplayPort-2
workspace $ws9 output DisplayPort-2

workspace $ws2 output HDMI-A-0
workspace $ws4 output HDMI-A-0
workspace $ws6 output HDMI-A-0
workspace $ws8 output HDMI-A-0

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "$mode_resize";exec notify-send 'i3' 'Resize Mode Active \n(h) Width -5 (j) Height +5 (k) Height -5 (l) Width -5'
set $mode_resize Resize Mode Enabled
mode "$mode_resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt
        
        bindsym Shift+h resize shrink width 10 px or 10 ppt
        bindsym Shift+j resize grow height 10 px or 10 ppt
        bindsym Shift+k resize shrink height 10 px or 10 ppt
        bindsym Shift+l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default";exec notify-send 'i3' 'Exited Resize Mode'
        bindsym Escape mode "default";exec notify-send 'i3' 'Exited Resize Mode'
        bindsym $mod+r mode "default";exec notify-send 'i3' 'Exited Resize Mode'
}

# Get colors from Xresource file that is set by pyWal
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0
# class                 border  backgr. text indicator child_border
client.focused          $fg     $bg     $fg  $bg       $bg
client.focused_inactive $fg     $bg     $fg  $bg       $bg
client.unfocused        $fg     $bg     $fg  $bg       $bg
client.urgent           $fg     $bg     $fg  $bg       $bg
client.placeholder      $fg     $bg     $fg  $bg       $bg
client.background       $fg

# Gaps
gaps inner 10
gaps outer 10
smart_gaps on
# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) Outer, (i) Inner, (r) Reset (0) Zero
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps";exec notify-send 'i3' 'Gaps Mode' '(o) Outer (i) Inner (r) Reset (0) Zero'

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer";exec notify-send 'i3' 'Outer Gaps Mode (+) +5 (-) -5 (0) 0'
        bindsym i      mode "$mode_gaps_inner";exec notify-send 'i3' 'Inner Gaps Mode (+) +5 (-) -5'
        bindsym 0      gaps inner current set 0; gaps outer current set 0; mode "default"
        bindsym r      gaps inner current set 10; gaps outer current set 10; mode "default"
        bindsym Return mode "default";exec notify-send 'i3' 'Exited Gaps Mode'
        bindsym Escape mode "default";exec notify-send 'i3' 'Exited Gaps Mode'
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default";exec notify-send 'i3' 'Exited Gaps Mode'
        bindsym Escape mode "default";exec notify-send 'i3' 'Exited Gaps Mode'
        bindsym Shift+Return mode "$mode_gaps";exec notify-send 'i3' 'Returned to Gaps Selection Mode'
        bindsym Shift+Escape mode "$mode_gaps";exec notify-send 'i3' 'Returned to Gaps Selection Mode'
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default";exec notify-send 'i3' 'Exited Gaps Mode'
        bindsym Escape mode "default";exec notify-send 'i3' 'Exited Gaps Mode'
        bindsym Shift+Return mode "$mode_gaps";exec notify-send 'i3' 'Returned to Gaps Selection Mode'
        bindsym Shift+Escape mode "$mode_gaps";exec notify-send 'i3' 'Returned to Gaps Selection Mode'
}

# Move the currently focused window to a scratchpad (Hide the window)
bindsym $mod+Shift+minus move scratchpad
# Show the first scratchpad
bindsym $mod+minus scratchpad show

# Set laptop hotkeys to raise volume
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -c 0 -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -c 0 -q set Master 2db- unmute
bindsym XF86AudioMute exec --no-startup-id amixer -q set Master toggle

# touchpad on and off controller on laptop with Fn+<touchpad control functional key>
bindsym XF86TouchpadOn exec --no-startup-id synclient Touchpadoff=0
bindsym XF86TouchpadOff exec --no-startup-id synclient Touchpadoff=1

# Autostart the following applications
# Load the last pyWal colorscheme used
exec_always --no-startup-id wal -R
# Set wallpaper
exec_always --no-startup-id $HOME/.fehbg
# Set monitors correctly
exec_always --no-startup-id $HOME/Ubuntu-Config/scripts/xrandr_monitor_startup.sh
# Status bar
exec_always --no-startup-id $HOME/Ubuntu-Config/.config/polybar/launch.sh
# Compositor for transparency
exec_always --no-startup-id picom --config $HOME/Ubuntu-Config/.config/picom/picom.conf -b
# Authentication agent for polkit
exec_always --no-startup-id mate-polkit
# Notification daemon
exec_always --no-startup-id dunst
# Rclone to mount OneDrive
exec_always --no-startup-id sh -c "rclone --vfs-cache-mode writes mount 'OneDrive - Wichita State University': $HOME/'OneDrive - Wichita State University'"
exec_always --no-startup-id sh -c "rclone --vfs-cache-mode writes mount 'OneDrive - Personal': $HOME/'OneDrive - Personal'"
# Start up KeePassXC Password Database
exec_always --no-startup-id keepassxc
